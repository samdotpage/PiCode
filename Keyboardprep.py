from tkinter import *word = '' #Just defines 'word' as arbitrary stringclass App:    def __init__(self, master):        frame = Frame(master)        frame.grid() #grid used: YAY        self.Print = Button(frame, text=" PRINT ", command=self.say_PRINT)        self.Print.grid(row=6)        self.space = Button(frame, text=" SPACE ", command=self.say_SPACE)        self.space.grid(columnspan=11) #tried to make it big but it didn't really work; oh well        self.backspace = Button(frame, text=" BACKSPACE ", command=self.say_BACKSPACE)        self.backspace.grid(column=11, row=1)        self.q = Button(frame, text=" Q ", command=self.say_Q)#creates button for Q        self.q.grid(column=1, row=2)        self.w = Button(frame, text=" W ", command=self.say_W)#creates button for W        self.w.grid(column=2, row=2)        self.e = Button(frame, text=" E ", command=self.say_E)#etcetera        self.e.grid(column=3, row=2)        self.r = Button(frame, text=" R ", command=self.say_R)#etcetera        self.r.grid(column=4, row=2)        self.t = Button(frame, text=" T ", command=self.say_T)#...        self.t.grid(column=5, row=2)        self.y = Button(frame, text=" Y ", command=self.say_Y)        self.y.grid(column=6, row=2)        self.u = Button(frame, text=" U ", command=self.say_U)        self.u.grid(column=7, row=2)        self.i = Button(frame, text=" I ", command=self.say_I)        self.i.grid(column=8, row=2)        self.o = Button(frame, text=" O ", command=self.say_O)        self.o.grid(column=9, row=2)        self.p = Button(frame, text=" P ", command=self.say_P)        self.p.grid(column=10, row=2)        self.a = Button(frame, text=" A ", command=self.say_A)        self.a.grid(column=1, row=3)        self.s = Button(frame, text=" S ", command=self.say_S)        self.s.grid(column=2, row=3)        self.d = Button(frame, text=" D ", command=self.say_D)        self.d.grid(column=3, row=3)        self.f = Button(frame, text=" F ", command=self.say_F)        self.f.grid(column=4, row=3)        self.g = Button(frame, text=" G ", command=self.say_G)        self.g.grid(column=5, row=3)        self.h = Button(frame, text=" H ", command=self.say_H)        self.h.grid(column=6, row=3)        self.j = Button(frame, text=" J ", command=self.say_J)        self.j.grid(column=7, row=3)        self.k = Button(frame, text=" K ", command=self.say_K)        self.k.grid(column=8, row=3)        self.l = Button(frame, text=" L ", command=self.say_L)        self.l.grid(column=9, row=3)        self.z = Button(frame, text=" Z ", command=self.say_Z)        self.z.grid(column=2, row=4)        self.x = Button(frame, text=" X ", command=self.say_X)        self.x.grid(column=3, row=4)        self.c = Button(frame, text=" C ", command=self.say_C)        self.c.grid(column=4, row=4)        self.v = Button(frame, text=" V ", command=self.say_V)        self.v.grid(column=5, row=4)        self.b = Button(frame, text=" B ", command=self.say_B)        self.b.grid(column=6, row=4)        self.n = Button(frame, text=" N ", command=self.say_N)        self.n.grid(column=7, row=4)        self.m = Button(frame, text=" M ", command=self.say_M)        self.m.grid(column=8, row=4)        self.comma = Button(frame, text=" , ", command=self.say_COMMA)#doesn't like it if I use a ,        self.comma.grid(column=9, row=4)        self.dot = Button(frame, text=" . ", command=self.say_DOT)#thinks . is part of command or something        self.dot.grid(column=10, row=4)    def say_PRINT(self):        w = Label(root, text = word)        w.grid(sticky=W, row = 7) #word becomes the whole sentence and prints over itself    def say_SPACE(self):        print (' ') #prints letter in the shell        global word #GLOBAL!!! Courtesy of a python forum when error message was googled        word = word + ' ' #also adds letter to word    def say_BACKSPACE(self):        print ('\b')        global word        word = word[:len(word)-1] #takes the word length and minuses a letter from it    def say_Q(self):        print ('Q')        global word        word = word + 'Q'    def say_W(self):        print ('W')        global word        word = word + 'W'    def say_E(self):        print ('E')        global word        word = word + 'E'    def say_R(self):        print ('R')        global word        word = word + 'R'    def say_T(self):        print ('T')        global word        word = word + 'T'    def say_Y(self):        print ('Y')        global word        word = word + 'Y'    def say_U(self):        print ('U')        global word        word = word + 'U'    def say_I(self):        print ('I')        global word        word = word + 'I'    def say_O(self):        print ('O')        global word        word = word + 'O'    def say_P(self):        print ('P')        global word        word = word + 'P'    def say_A(self):        print ('A')        global word        word = word + 'A'    def say_S(self):        print ('S')        global word        word = word + 'S'    def say_D(self):        print ('D')        global word        word = word + 'D'    def say_F(self):        print ('F')        global word        word = word + 'F'    def say_G(self):        print ('G')        global word        word = word + 'G'    def say_H(self):        print ('H')        global word        word = word + 'H'    def say_J(self):        print ('J')        global word        word = word + 'J'    def say_K(self):        print ('K')        global word        word = word + 'K'    def say_L(self):        print ('L')        global word        word = word + 'L'    def say_Z(self):        print ('Z')        global word        word = word + 'Z'    def say_X(self):        print ('X')        global word        word = word + 'X'    def say_C(self):        print ('C')        global word        word = word + 'C'    def say_V(self):        print ('V')        global word        word = word + 'V'    def say_B(self):        print ('B')        global word        word = word + 'B'    def say_N(self):        print ('N')        global word        word = word + 'N'    def say_M(self):        print ('M')        global word        word = word + 'M'    def say_COMMA(self):        print (',')        global word        word = word + ','    def say_DOT(self):        print ('.')        global word        word = word + '.'root = Tk()app = App(root)root.mainloop()